---
# somewhat taken from: https://github.com/bryfry/ansible-docker/blob/master/docker.yml
- hosts: all
  sudo: yes
  vars:
    docker_host_ip: 0.0.0.0
    docker_host_port: 2375
    docker_version: 1.4.0
  tasks:

    - name: Ubuntu | Adding Docker repository key
      apt_key: >
        url="https://get.docker.io/gpg" id="A88D21E9" state=present
      when: ansible_os_family == 'Debian'

    - name: Ubuntu | Adding Docker repository
      apt_repository: >
        repo='deb http://get.docker.io/ubuntu docker main'
        update_cache=yes
        state=present
      when: ansible_os_family == 'Debian'

    - name: Ubuntu | Installing Docker and Dependencies
      apt: name="{{ item }}" state=present
      with_items:
        - apt-transport-https
        - "lxc-docker-{{ docker_version }}"
        - python-pip
      when: ansible_os_family == 'Debian'

    - name: CentOS | get epel-repo rpm RHEL6
      get_url:
        dest: /tmp/epel-release.rpm
        url: http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
      when: ansible_os_family == 'RedHat'

    - name: CentOS | install epel-repo rpm
      yum: pkg=/tmp/epel-release.rpm state=installed
      when: ansible_os_family == 'RedHat'
      register: epel_enabled

    - name: CentOS | update yum cache
      command: yum makecache
      when: ansible_os_family == 'RedHat'
      register: epel_enabled | changed

    - name: CentOS | Installing Docker and Dependencies
      yum: name={{ item }} enablerepo=epel state=present
      with_items:
        - "docker-io"
        - python-pip
        - libselinux-python
      when: ansible_os_family == 'RedHat'

    - name: Installing docker-py for ansible docker module
      pip: name=docker-py==0.5.3 state=present

    - name: Debian | Expose docker host
      lineinfile: >
        dest=/etc/default/docker
        regexp="^DOCKER_OPTS"
        line='DOCKER_OPTS="-H unix:///var/run/docker.sock -H tcp://{{ docker_host_ip }}:{{ docker_host_port }}"'
      when: expose_docker_host
      tags: [test]
      when: ansible_os_family == 'Debian'

    - name: CentOS | Expose docker host
      lineinfile:
        dest: /etc/sysconfig/docker
        regexp: "^other_args"
        line: 'other_args="-H unix:///var/run/docker.sock -H tcp://{{ docker_host_ip }}:{{ docker_host_port }}"'
      when: expose_docker_host
      tags: [test]
      when: ansible_os_family == 'RedHat'

    - name: Restart docker service / daemon
      service: name=docker state=restarted


- hosts: all
  sudo: yes
  vars:
    expose_docker_host: true
    squash_version: v0.0.11
    squash_file: "docker-squash-linux-amd64-{{ squash_version }}.tar.gz"
    squash_url: "https://github.com/jwilder/docker-squash/releases/download/{{ squash_version }}/{{ squash_file }}"
  tasks:
    - name: Route traffic locally to docker
      sudo: true
      sudo_user: "{{ local_user }}"
      shell: sudo route -nv add -net {{ ansible_docker0.ipv4.address }}/16 {{ bridge_network }}
      delegate_to: 127.0.0.1
      when: expose_docker_host
      tags: [test]

    - name: Adding vagrant user to docker group
      user: name=vagrant append=yes groups=docker state=present

    - name: download docker-squash
      get_url: url={{ squash_url }} dest=/tmp mode=0644

    - name: unpack docker-squash
      unarchive: src=/tmp/{{ squash_file }} dest=/usr/local/bin copy=no

    # - name: smash grub
    #   lineinfile: >
    #     dest=/etc/default/grub
    #     regexp='^GRUB_CMDLINE_LINUX='
    #     line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
    #   register: grub_edit

    # - name: updatin grub
    #   command: update-grub
    #   when: grub_edit|changed

    # - name: ufw forwardin
    #   lineinfile: >
    #     dest=/etc/default/ufw
    #     regexp="^DEFAULT_FORWARD_POLICY="
    #     line="DEFAULT_FORWARD_POLICY=\"ACCEPT\""

    # - name: restart machine
    #   command: shutdown -r now "Ansible updates triggered"
    #   async: 0
    #   poll: 0
    #   ignore_errors: true
    #   when: grub_edit|changed

    # - name: waiting for server to come back
    #   local_action: >
    #     wait_for host={{ ansible_ssh_host }}
    #              port={{ansible_ssh_port}} delay=30 state=started
    #   sudo: false
